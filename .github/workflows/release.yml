name: 'Release'

on:
  push:
    tags:
      - 'v*'
      - 'version/**'

defaults:
  run:
    # make sure to work on Windows
    shell: 'bash'

jobs:
  release-pypi:
    name: 'release-pypi'
    runs-on: 'ubuntu-latest'
    permissions:
      id-token: 'write'
      contents: 'write'

    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - uses: 'actions/setup-python@v5'
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 'Check prerelease'
        id: 'check_version'
        run: |
          TAG_NAME='${{ github.ref_name }}'
          VERSION_PART='${TAG_NAME#v}'
          VERSION_PART='${VERSION_PART#version/}'
          if [[ '$VERSION_PART' =~ [a-zA-Z] ]]; then
            echo 'PRERELEASE=true' >> $GITHUB_OUTPUT
          else
            echo 'PRERELEASE=false' >> $GITHUB_OUTPUT
          fi

      - name: 'Build release artifacts'
        if: steps.check_version.outputs.PRERELEASE == 'false'
        run: 'pipx run build'

      - name: 'Build prerelease artifacts'
        if: steps.check_version.outputs.PRERELEASE == 'true'
        run: 'pipx run build'
        env:
          SETUPTOOLS_SCM_ADD_LOCAL: '1'

      - name: 'Upload artifacts'
        uses: 'actions/upload-artifact@v4'
        with:
          name: 'fit-tool-ng-wheel'
          path: 'dist/*.whl'
          if-no-files-found: 'error'
          retention-days: 15

      - name: 'Test Build'
        run: |
          python -m pip install "fit-tool-ng @ file://$(ls ${GITHUB_WORKSPACE}/dist/*.whl)"
          fittool --help

      - name: 'Publish package distributions to PyPI'
        if: steps.check_version.outputs.PRERELEASE == 'false'
        uses: 'pypa/gh-action-pypi-publish@release/v1'

      - name: 'Get previous tag'
        id: 'previoustag'
        run: echo "tag=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))" >> "$GITHUB_OUTPUT"

      - name: 'Build Changelog'
        id: 'build_changelog'
        uses: 'mikepenz/release-changelog-builder-action@v5'
        with:
          fromTag: ${{ steps.previoustag.outputs.tag }}
          toTag: ${{ github.ref_name }}
          configurationJson: |
            {
              'categories': [
                {
                  'title': '### Features',
                  'labels': ['feature', 'feat']
                },
                {
                  'title': '### Bug Fixes',
                  'labels': ['fix', 'bug']
                },
                {
                  'title': '### Documentation',
                  'labels': ['docs', 'documentation']
                },
                {
                  'title': '### Refactoring',
                  'labels': ['refactor']
                },
                {
                  'title': '### Tests',
                  'labels': ['test', 'tests']
                },
                {
                  'title': '### Dependencies',
                  'labels': ['dependencies', 'deps']
                },
                {
                  'title': '### Chores',
                  'labels': ['chore']
                }
              ],
              'template': '##{{CHANGELOG}}',
              'pr_template': '- ##{{TITLE}} (#{{NUMBER}})'
            }
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: 'Create Release'
        uses: 'softprops/action-gh-release@v1'
        with:
          body: '${{ steps.build_changelog.outputs.changelog }}'
          prerelease: '${{ steps.check_version.outputs.PRERELEASE }}'
